import random
from telebot_router import TeleBot
from telebot import types, TeleBot, custom_filters
from telebot.storage import StateMemoryStorage
from telebot.handler_backends import State, StatesGroup
import psycopg2

from work_bd import delete_words
from work_bd import get_password
from work_bd import add_user
from work_bd import get_current_user_id
from work_bd import add_user_words
from work_bd import get_one_random_word
from work_bd import get_three_random_words


try:
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –ë–î –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
    connection = psycopg2.connect(dbname=get_password()[1], user='postgres', password=get_password()[0])
except:
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
    print('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')

print('Start telegram bot...')

#  –û–±—ä–µ–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –ë–î –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
cursor = connection.cursor()

state_storage = StateMemoryStorage()

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ Telegram-–±–æ—Ç–∞
token_bot = get_password()[2]
bot = TeleBot(token_bot, state_storage=state_storage)

known_users = []
userStep = {}
buttons = []  # –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫


# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø—Ä–∏ –≤–≤–æ–¥–µ –æ—Ç–≤–µ—Ç–∞ –≤ Telegram-–±–æ—Ç–µ
def show_hint(*lines):
    return '\n'.join(lines)


# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è —Å–ª–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
def show_target(data):
    return f'—Å–ª–æ–≤–æ ({data['target_word']}) –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –∫–∞–∫ ({data['translate_word']})'


class Command:  # –ù–∞–¥–ø–∏—Å–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –≤ Telegram-–±–æ—Ç–µ
    ADD_WORD = '–î–û–ë–ê–í–ò–¢–¨ –°–õ–û–í–û ‚ûï'
    DELETE_WORD = '–£–î–ê–õ–ò–¢–¨ –°–õ–û–í–û üîô'
    NEXT = '–î–ê–õ–¨–®–ï‚è≠'


class MyStates(StatesGroup):
    target_word = State()
    translate_word = State()
    another_words = State()


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Telegram-–±–æ—Ç–æ–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_step(uid):
    if uid in userStep:
        return userStep[uid]
    else:
        known_users.append(uid)
        userStep[uid] = 0
        print("New user detected, who hasn't used \"/start\" yet")
        return 0


@bot.message_handler(commands=['cards', 'start', 's'])  # –ê–Ω–Ω–∞—Ç–∞—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
def create_cards(message):
    cid = message.chat.id
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü—É users —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π current_user_id id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_user_id = get_current_user_id(message.from_user.first_name)
    # –ï—Å–ª–∏ id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ø–µ—Ä–≤—ã–µ –∑–∞–ø—É—Å—Ç–∏–ª Telegram-–±–æ—Ç–∞)
    if not current_user_id:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É users
        add_user(message.from_user.first_name, message.from_user.last_name,message.from_user.username)
        print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω')
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram-–±–æ—Ç–µ
        bot.send_message(cid, "–ü—Ä–∏–≤–µ—Ç üëã –î–∞–≤–∞–π –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.")
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π current_user_id id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        current_user_id = get_current_user_id(message.from_user.first_name)
    # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω –≤ —Ç–∞–±–ª–∏—Ü—É users –≤—ã–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    else:
        bot.send_message(cid, "–î–∞–≤–∞–π –µ—â–µ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.")
    print(current_user_id)
    if cid not in known_users:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ known_users
        known_users.append(cid)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ known_users
        userStep[cid] = 0
    markup = types.ReplyKeyboardMarkup(row_width=4)  # –ó–∞–¥–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ

    global buttons  # –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∫–Ω–æ–ø–æ–∫
    buttons = []  # –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞ —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏–∑ —Å–ø–∏—Å–∫–∞, –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ —ç—Ç–∏—Ö —Å–ª–æ–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º target_word, translate
    target_word, translate = get_one_random_word(current_user_id)
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –æ–¥–Ω–æ–π –∏–∑ –∫–Ω–æ–ø–æ–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞
    target_word_btn = types.KeyboardButton(str(target_word))
    # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É –∫–Ω–æ–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ buttons
    buttons.append(target_word_btn)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞,
    # –í —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤
    others = get_three_random_words(current_user_id, target_word)
    print(others)  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–ø–∏—Å–æ–∫ —ç—Ç–∏—Ö —Ç—Ä–µ—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–ª–æ–≤

    # –°–æ–∑–¥–∞–Ω–∏–µ 3 –∫–Ω–æ–ø–æ–∫ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    other_words_btns = [types.KeyboardButton(str(word)) for word in others]
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ buttons —Å–ø–∏—Å–∫–∞ other_words_btns (—Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤)
    buttons.extend(other_words_btns)
    random.shuffle(buttons)  # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ —Å–ø–∏—Å–∫–∞ buttons
    next_btn = types.KeyboardButton(Command.NEXT)  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –î–ê–õ–¨–®–ï
    add_word_btn = types.KeyboardButton(Command.ADD_WORD)  # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –î–û–ë–ê–í–ò–¢–¨ –°–õ–û–í–û
    delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)  # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –£–î–ê–õ–ò–¢–¨ –°–õ–û–í–û
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ buttons –∫–Ω–æ–ø–æ–∫  –î–ê–õ–¨–®–ï, –î–û–ë–ê–í–ò–¢–¨ –°–õ–û–í–û, –£–î–ê–õ–ò–¢–¨ –°–õ–û–í–û
    buttons.extend([next_btn, add_word_btn, delete_word_btn])

    markup.add(*buttons)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞  –∫–Ω–æ–ø–æ–∫ buttons –≤ —Ä–∞–∑–º–µ—Ç–∫—É –±–æ—Ç–∞

    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π greeting –∑–Ω–∞—á–µ–Ω–∏–µ —Ä—É—Å—Å–∫–æ–≥–æ —Å–ª–æ–≤–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
    greeting = f"–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:\nüá∑üá∫ {translate}"
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è greeting –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ä–∞–∑–º–µ—Ç–∫–∏
    bot.send_message(message.chat.id, greeting, reply_markup=markup)
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.set_state(message.from_user.id, MyStates.target_word,message.chat.id)
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data['target_word'] = target_word
        data['translate_word'] = translate
        data['other_words'] = others


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∫–Ω–æ–ø–∫–∏ –î–ê–õ–¨–®–ï
@bot.message_handler(func=lambda message: message.text == Command.NEXT)
def next_cards(message):
    create_cards(message)


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∫–Ω–æ–ø–∫–∏ –£–î–ê–õ–ò–¢–¨ –°–õ–û–í–û
@bot.message_handler(func=lambda message: message.text == Command.DELETE_WORD)
# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—â–∞—è —Å–ª–æ–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
def delete_word(message):
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π cid –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ id —á–∞—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è message
    cid = message.chat.id
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
    userStep[cid] = 1
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
    bot.send_message(cid,"–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(message, process_user_deleteinput)


# –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—é , —É–¥–∞–ª—è—é—â—É—é —Å–ª–æ–≤–æ, –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∏–∑ delete_word
def process_user_deleteinput(message):
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º cid –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ id —á–∞—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è message
    cid = message.chat.id
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º word_to_delete –∑–Ω–∞—á–µ–Ω–∏–µ message.text
    word_to_delete = str(message.text)
    print(word_to_delete)
    current_uid = get_current_user_id(message.from_user.first_name)
    # –ï—Å–ª–∏ —É–¥–∞–ª—è–µ–º–æ–µ —Å–ª–æ–≤–æ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ delete_words
    # –ï—Å–ª–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ delete_words –≤–µ—Ä–Ω—É–ª–æ—Å—å True
    if delete_words(word_to_delete, current_uid):
        bot.send_message(cid, "–°–ª–æ–≤–æ —É–¥–∞–ª–µ–Ω–æ")
    # –ï—Å–ª–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ delete_words –≤–µ—Ä–Ω—É–ª–æ—Å—å False
    else:
        bot.send_message(cid, "–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ —Å–ª–æ–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–±–∞–≤–∏–ª–∏ —Å–∞–º–∏")
    create_cards(message)  # –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ Telegram-–±–æ—Ç–µ


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∫–Ω–æ–ø–∫–∏ –î–û–ë–ê–í–ò–¢–¨ –°–õ–û–í–û
@bot.message_handler(func=lambda message: message.text == Command.ADD_WORD)
# —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—â–∞—è —Å–ª–æ–≤–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
def add_word(message):
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º cid –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ id —á–∞—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è message
    cid = message.chat.id
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
    userStep[cid] = 1
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
    bot.send_message(cid,"–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –ß–ï–†–ï–ó –ü–†–û–ë–ï–õ,"
                            " –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É —Å–ª–æ–≤:")
    bot.register_next_step_handler(message, process_user_input)


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –¥–≤–∞ —Å–ª–æ–≤–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î
def process_user_input(message):
    # –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º cid –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ id —á–∞—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è message
    cid = message.chat.id
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π words —Å–ø–∏—Å–æ–∫ –∏–∑ –¥–≤—É—Ö —Å–ª–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    words = str(message.text).split()
    if len(words) == 2:
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º eng_word_to_add, rus_word_to_add –∑–Ω–∞—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ words
        eng_word_to_add, rus_word_to_add = words
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è current_uid id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_uid = get_current_user_id(message.from_user.first_name)
    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ add_user_words –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É words –∑–Ω–∞—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ words
    # –ï—Å–ª–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ add_user_words –≤–µ—Ä–Ω—É–ª–æ—Å—å True
    if add_user_words(connection, eng_word_to_add, rus_word_to_add, current_uid):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
        bot.send_message(cid, "–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –ø–∞—Ä–∞ —Å–ª–æ–≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ - —Ä—É—Å—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥")
        create_cards(message)  # –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±–æ—Ç–µ
    # –ï—Å–ª–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ add_user_words –≤–µ—Ä–Ω—É–ª–æ—Å—å False
    else:
        bot.send_message(cid, "–°–ª–æ–≤–æ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ")
        create_cards(message)  # –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ Telegram-–±–æ—Ç–µ
    print(add_user_words(connection, eng_word_to_add, rus_word_to_add, current_uid))


# –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –æ—Ç–≤–µ—Ç—ã Telegram-–±–æ—Ç–µ
@bot.message_handler(func=lambda message: True, content_types=['text'])
def message_reply(message):
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π text –∑–Ω–∞—á–µ–Ω–∏–µ text –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è message
    text = message.text
    # –ó–∞–¥–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–æ–π —Å—Ç—Ä–æ–∫–µ
    markup = types.ReplyKeyboardMarkup(row_width=4)
    # –í—ã–∑—ã–≤–∞–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ id —á–∞—Ç–∞
    with bot.retrieve_data(message.from_user.id,message.chat.id) as data:
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π target_word –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        target_word = data['target_word']
        if text == target_word:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π hint –∑–Ω–∞—á–µ–Ω–∏–µ,
            # –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ show_target
            hint = show_target(data)
            # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ hint_text
            hint_text = ["–û—Ç–ª–∏—á–Ω–æ!‚ù§", hint]
            hint = show_hint(*hint_text)  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –æ—Ç–≤–µ—Ç–∞
            for btn in buttons:
                if btn.text == text:
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–¥–µ—á–∫–∞ –≤ –∫–Ω–æ–ø–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
                    btn.text = text + '‚ù§'
                    break
        else:
            # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
            for btn in buttons:
                if btn.text == text:
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–µ—Å—Ç–∏–∫–∞ –≤ –∫–Ω–æ–ø–∫—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
                    btn.text = text + '‚ùå'
                    break
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            hint = show_hint("–î–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞!",
                             f"–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–ª–æ–≤–æ üá∑üá∫{data['translate_word']}")
    markup.add(*buttons)  # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–æ–∫
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—Ç–≤–µ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º/–Ω–µ—Ç –ø–µ—Ä–µ–≤–æ–¥–µ —Å–ª–æ–≤–∞
    bot.send_message(message.chat.id, hint, reply_markup=markup)
    if text == target_word:
        create_cards(message)  # –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ Telegram-–±–æ—Ç–µ


bot.add_custom_filter(custom_filters.StateFilter(bot))

bot.infinity_polling(skip_pending=True)
